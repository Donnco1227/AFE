name: Deploy AFE Application

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod
      command:
        description: 'Select the command to run'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy

env:
  AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Set environment variables based on input
        id: set_env_vars
        run: |
          if [ "${{ github.event.inputs.environment }}" == "prod" ]; then
            env:
              AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
              AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY
          else
            env:
              AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
              AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          fi
          echo $AWS_ACCESS_KEY_ID
          echo $AWS_SECRET_ACCESS_KEY
          echo $AWS_DEFAULT_REGION

      - name: Checkout
        uses: actions/checkout@v4

      # - name: Run Terraform commands
      #   run: |
      #     cd terraform
      #     if [ "${{ github.event.inputs.environment }}" == "prod" ]; then
      #         terraform init -backend-config=backend-prod.tfvars
      #         if [ "${{ github.event.inputs.command }}" == "plan" ]; then
      #           terraform plan
      #         elif [ "${{ github.event.inputs.command }}" == "apply" ]; then
      #           terraform apply -auto-approve
      #         elif [ "${{ github.event.inputs.command }}" == "destroy" ]; then
      #           terraform destroy -auto-approve
      #     else
      #         terraform init -backend-config=backend-dev.tfvars
      #         if [ "${{ github.event.inputs.command }}" == "plan" ]; then
      #           terraform plan
      #         elif [ "${{ github.event.inputs.command }}" == "apply" ]; then
      #           terraform apply -auto-approve
      #         elif [ "${{ github.event.inputs.command }}" == "destroy" ]; then
      #           terraform destroy -auto-approve
      #     fi